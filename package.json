{
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "packageManager": "yarn@1.22.19",
  "engines": {
    "node": ">=18.15.0",
    "npm": ">=7.0.0"
  },
  "scripts": {
    "build": "turbo run build",
    "dev": "source dev.env && turbo run dev --parallel",
    "db": "docker run --name my_postgres -e POSTGRES_PASSWORD=mysecretpassword -e POSTGRES_USER=myuser -e POSTGRES_DB=mydatabase -p 6001:5432 -d postgres",
    "format": "prettier --ignore-unknown --write .",
    "format:staged": "prettier --ignore-unknown --write \"**/*.{ts,tsx,md}\"",
    "lint": "turbo run lint",
    "lint:staged": "turbo run lint:staged --",
    "prepare": "husky install",
    "secrets:audit": "detect-secrets audit .secrets.baseline",
    "secrets:check": "scripts/detect-secrets.sh",
    "secrets:check:staged": "scripts/detect-secrets-staged.sh",
    "secrets:setup": "detect-secrets scan --update .secrets.baseline",
    "setup": "[ -d \"$(git rev-parse --show-toplevel)/apps/api\" ] && cd \"$(git rev-parse --show-toplevel)/apps/api\" && op run --env-file=./dev.env -- npx prisma migrate dev && npx prisma generate; cd $(git rev-parse --show-toplevel)",
    "setup:no-git": "cd \"./apps/api\" && op run --env-file=./dev.env -- npx prisma migrate dev && npx prisma generate; cd ../../",
    "test": "turbo run test",
    "test:staged": "turbo run test:staged --"
  },
  "devDependencies": {
    "prettier": "^2.8.8",
    "turbo": "latest"
  }
}
